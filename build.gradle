buildscript {
    ext {
        kotlinVersion = '1.0.6'
        springBootVersion = '1.4.2.RELEASE'
    }

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

apply plugin: 'kotlin'
apply plugin: 'org.springframework.boot'
apply plugin: 'application'
apply plugin: 'docker'

apply from: "$rootDir/gradle/versioning.gradle"

sourceCompatibility = 1.8
mainClassName = 'com.jalgoarena.JAlgoArenaEurekaServer'

repositories {
    mavenCentral()
}

distDocker {
    exposePort 5000
}

jar {
    baseName = 'jalgoarena-eureka'
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion",
            'org.springframework.cloud:spring-cloud-starter-hystrix-dashboard',
            'org.springframework.cloud:spring-cloud-starter-eureka-server'
}

defaultTasks 'clean', 'bootRepackage'

task stage {
    dependsOn 'bootRepackage'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Camden.SR3"
    }
}

task releaseZip(type: Zip, dependsOn: 'bootRepackage') {
    from 'lib/', 'build/libs/', 'run.sh'
    include '*.jar', '*.sh'
    include '*/*'
    archiveName "JAlgoArena-Eureka-${version}.zip"
    destinationDir(file('build/libs'))
}
